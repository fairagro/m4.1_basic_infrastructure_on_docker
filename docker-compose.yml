services:
  nextcloud:
    image: nextcloud:28.0.2
    container_name: nextcloud_app
    restart: always
    environment:
      - POSTGRES_HOST=db
      - POSTGRES_DB=nextcloud
      - PGSSLCERT=/tmp/postgresql.crt
      - REDIS_HOST=redis
      - SMTP_HOST=www623.your-server.de
      - SMTP_PORT=587
      - SMTP_SECURE=starttls
      - SMTP_AUTHTYPE=LOGIN
      - MAIL_FROM_ADDRESS=nextcloud
      - MAIL_DOMAIN=fairagro.net
      - NEXTCLOUD_TRUSTED_DOMAINS=nextcloud.fairagro.net
      - VIRTUAL_HOST=nextcloud.fairagro.net
      - VIRTUAL_PORT=80
    volumes:
      - nextcloud_data:/var/www/html
    expose:
      - "80"
    networks:
      - nextcloud_net
      - proxy_net
    labels:
      - "com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy=true"
      - "VIRTUAL_HOST=nextcloud.fairagro.net"
      - "VIRTUAL_PORT=80"
    depends_on:
      - db
      - redis
    cap_drop:
      - ALL
    read_only: false  # Nextcloud benötigt Schreibrechte
    security_opt:
      - no-new-privileges:true

  db:
    image: postgres:15
    container_name: nextcloud_db
    restart: always
    environment:
      - POSTGRES_DB=nextcloud
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - nextcloud_net
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp
      - /run

  redis:
    image: redis:alpine
    container_name: nextcloud_redis
    restart: always
    networks:
      - nextcloud_net
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp
      - /run
      - /data

  nginx-proxy:
    image: nginx:alpine
    container_name: nginx_proxy
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - nginx_confd:/etc/nginx/conf.d
      - nginx_vhostd:/etc/nginx/vhost.d
      - nginx_html:/usr/share/nginx/html
      - nginx_certs:/etc/nginx/certs:ro
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - docker-gen
    networks:
      - proxy_net
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    cap_add:
      - NET_BIND_SERVICE
    read_only: true
    user: "101:101"  # nginx user in Alpine image
    tmpfs:
      - /var/cache/nginx
      - /tmp
      - /run

  docker-gen:
    image: nginxproxy/docker-gen
    container_name: nginx_docker_gen
    restart: always
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./nginx/nginx.tmpl:/etc/docker-gen/templates/nginx.tmpl:ro
      - nginx_confd:/etc/nginx/conf.d
    command: >
      -notify-sighup nginx_proxy
      /etc/docker-gen/templates/nginx.tmpl /etc/nginx/conf.d/default.conf
    networks:
      - proxy_net
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    user: "1000:1000"  # Unprivilegierter Benutzer (wenn unterstützt)
    read_only: true
    tmpfs:
      - /tmp
      - /run

  acme-companion:
    image: nginxproxy/acme-companion
    container_name: nginx_acme
    restart: always
    environment:
      - DEFAULT_EMAIL=admin@example.com
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - nginx_certs:/etc/nginx/certs:rw
      - nginx_vhostd:/etc/nginx/vhost.d
      - nginx_html:/usr/share/nginx/html
    depends_on:
      - nginx-proxy
    networks:
      - proxy_net
    cap_drop:
      - ALL
    security_opt:
      - no-new-privileges:true
    read_only: true
    user: "1000:1000"
    tmpfs:
      - /tmp
      - /run

volumes:
  nextcloud_data:
  db_data:
  nginx_certs:
  nginx_vhostd:
  nginx_confd:
  nginx_html:

networks:
  nextcloud_net:
    internal: true   # Kein direkter Zugang von außen
  proxy_net:
    internal: false  # Externe Zugriffe erlaubt (z.B. nginx)
