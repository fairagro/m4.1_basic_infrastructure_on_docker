services:
  nextcloud:
    image: nextcloud:28.0.2-fpm-alpine
    restart: unless-stopped
    environment:
      - POSTGRES_HOST=/var/run/postgresql
      - POSTGRES_DB=nextcloud
      - POSTGRES_USER=${NEXTCLOUD_DB_USER}
      - POSTGRES_PASSWORD=${NEXTCLOUD_DB_PASSWORD}
      - PGSSLCERT=/tmp/postgresql.crt
      - REDIS_HOST=/var/run/redis/redis.sock
      - SMTP_HOST=www623.your-server.de
      - SMTP_PORT=587
      - SMTP_SECURE=starttls
      - SMTP_AUTHTYPE=LOGIN
      - MAIL_FROM_ADDRESS=nextcloud
      - MAIL_DOMAIN=fairagro.net
      - ONLYOFFICE_SERVER=onlyoffice.fairagro.net
      - NEXTCLOUD_TRUSTED_DOMAINS=nextcloud.fairagro.net
      - NEXTCLOUD_DATA_DIR=/var/www/data
      # these variables are set via secrets:
      # (TODO:we could alternatively rely on docker secrets, but it's unclear if this
      # is also supported by the postgres database container/
      # refer to: https://docs.docker.com/compose/how-tos/use-secrets/,
      # We would need to define all variables ending in _FILE instead)
      - NEXTCLOUD_ADMIN_USER
      - NEXTCLOUD_ADMIN_PASSWORD
      - SMTP_NAME
      - SMTP_PASSWORD
      - REDIS_HOST_PASSWORD
      - ONLYOFFICE_JWT_SECRET
    user: "82:1000"
    extra_hosts:
      - "nextcloud.fairagro.net:10.14.10.64"
      - "onlyoffice.fairagro.net:10.14.10.64"
    read_only: false
    volumes:
      - nextcloud:/var/www/html:rw
      - nextcloud_data:/var/www/data:rw
      - nextcloud_socket:/var/run/php:rw
      - db_socket:/var/run/postgresql:rw
      - redis_socket:/var/run/redis:rw
      - ./nextcloud/redis-session.ini:/usr/local/etc/php/conf.d/redis-session.ini:rw
      - ./nextcloud/nextcloud-config.sh:/docker-entrypoint-hooks.d/before-starting/nextcloud-config.sh:ro
      - ./nextcloud/nextcloud-apps.sh:/docker-entrypoint-hooks.d/before-starting/nextcloud-apps.sh:ro
      - ./nextcloud/php-fpm-www.conf:/usr/local/etc/php-fpm.d/www.conf:ro
    networks:
      - external-net    # nextcloud needs internet access
    depends_on:
      - db
      - nextcloud-redis
    cap_drop:
      - ALL
    security_opt:
      - no-new-privileges:true
    tmpfs:
      - /tmp

  # This is a root container!
  # Probably we do not need all those env vars...
  nextcloud-cron:
    image: nextcloud:28.0.2-fpm-alpine
    restart: unless-stopped
    entrypoint: /cron.sh
    user: "0:1000"
    depends_on:
      - nextcloud
    environment:
      - POSTGRES_HOST=/var/run/postgresql
      - POSTGRES_DB=nextcloud
      - POSTGRES_USER=${NEXTCLOUD_DB_USER}
      - POSTGRES_PASSWORD=${NEXTCLOUD_DB_PASSWORD}
      - PGSSLCERT=/tmp/postgresql.crt
      - REDIS_HOST=/var/run/redis/redis.sock
      - SMTP_HOST=www623.your-server.de
      - SMTP_PORT=587
      - SMTP_SECURE=starttls
      - SMTP_AUTHTYPE=LOGIN
      - MAIL_FROM_ADDRESS=nextcloud
      - MAIL_DOMAIN=fairagro.net
      - NEXTCLOUD_TRUSTED_DOMAINS=nextcloud.fairagro.net
      - NEXTCLOUD_DATA_DIR=/var/www/data
      # these variables are set via secrets:
      - NEXTCLOUD_ADMIN_USER
      - NEXTCLOUD_ADMIN_PASSWORD
      - SMTP_NAME
      - SMTP_PASSWORD
      - REDIS_HOST_PASSWORD
    extra_hosts:
      - "nextcloud.fairagro.net:10.14.10.64"
      - "onlyoffice.fairagro.net:10.14.10.64"
    read_only: true
    volumes:
      - nextcloud:/var/www/html:rw
      - nextcloud_data:/var/www/data:rw
      - db_socket:/var/run/postgresql:rw
      - redis_socket:/var/run/redis:rw
      - ./nextcloud/redis-session.ini:/usr/local/etc/php/conf.d/redis-session.ini:ro
      - ./nextcloud/php-fpm-www.conf:/usr/local/etc/php-fpm.d/www.conf:ro
    networks:
      - external-net    # nextcloud needs internet access
    cap_drop:
      - ALL
    cap_add:
      - SETUID
      - SETGID
    security_opt:
      - no-new-privileges:true
    tmpfs:
      - /tmp

  onlyoffice:
    image: onlyoffice/documentserver-ee
    restart: unless-stopped
    # Custom entrypoint: write license first, then start the document server
    entrypoint: ["/bin/sh", "-c", "/write-license.sh && /app/ds/run-document-server.sh"]
    environment:
      - DB_TYPE=postgres
      - DB_HOST=db
      - DB_PORT=5432
      - DB_NAME=onlyoffice
      - DB_USER=${ONLYOFFICE_DB_USER}
      - DB_PWD=${ONLYOFFICE_DB_PASSWORD}
      - JWT_ENABLED=true
      - JWT_SECRET=${ONLYOFFICE_JWT_SECRET}
      - SSL_CERTIFICATE_PATH=/var/www/onlyoffice/Data/certs/live/onlyoffice.fairagro.net/fullchain.pem
      - SSL_KEY_PATH=/var/www/onlyoffice/Data/certs/live/onlyoffice.fairagro.net/privkey.pem
      - PGSSLCERT=/tmp/postgresql.crt
      - ONLYOFFICE_LICENSE
    user: "0:1000"
    depends_on:
      - db
    networks:
      - onlyoffice-db-net
      - external-net
    extra_hosts:
      - "nextcloud.fairagro.net:10.14.10.64"
      - "onlyoffice.fairagro.net:10.14.10.64"
    volumes:
      - onlyoffice_data:/var/www/onlyoffice/Data:rw
      - onlyoffice_logs:/var/log/onlyoffice:rw
      - onlyoffice_lib:/var/lib/onlyoffice:rw
      - onlyoffice_certs_archive:/var/www/onlyoffice/Data/certs/archive/onlyoffice.fairagro.net:ro
      - onlyoffice_certs_live:/var/www/onlyoffice/Data/certs/live/onlyoffice.fairagro.net:ro
      - ./onlyoffice/write-license.sh:/write-license.sh:ro
    ports:
      - "8443:443"
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    cap_add:
      - CAP_CHOWN
      - CAP_DAC_OVERRIDE
      - CAP_FOWNER
      - CAP_KILL
      - CAP_SETGID
      - CAP_SETUID
      - CAP_SYS_PTRACE

  db:
    image: postgres:16-alpine
    # Setting suggestions by https://pgtune.leopard.in.ua with this input:
    # DB Version: 16
    # OS Type: linux
    # DB Type: web
    # Total Memory (RAM): 4 GB
    # CPUs num: 4
    # Connections num: 30
    # Data Storage: san
    command: >
      postgres
        -c listen_addresses='0.0.0.0'
        -c logging_collector=off
        -c log_destination='stderr'
        -c log_min_duration_statement=200
        -c log_line_prefix='%t [%p]: [%l-1] user=%u,db=%d '
        -c max_connections='30'
        -c shared_buffers='1GB'
        -c effective_cache_size='3GB'
        -c maintenance_work_mem='256MB'
        -c checkpoint_completion_target='0.9'
        -c wal_buffers='16MB'
        -c default_statistics_target='100'
        -c random_page_cost='1.1'
        -c effective_io_concurrency='300'
        -c work_mem='30840kB'
        -c huge_pages='off'
        -c min_wal_size='1GB'
        -c max_wal_size='4GB'
        -c max_worker_processes='4'
        -c max_parallel_workers_per_gather='2'
        -c max_parallel_workers='4'
        -c max_parallel_maintenance_workers='2'
    restart: unless-stopped
    user: "70:1000"
    depends_on:
      - init
    environment:
      - NEXTCLOUD_DB=nextcloud
      - ONLYOFFICE_DB=onlyoffice
      # folgende variablen werden via secret gesetzt:
      - POSTGRES_PASSWORD
      - NEXTCLOUD_DB_USER
      - NEXTCLOUD_DB_PASSWORD
      - ONLYOFFICE_DB_USER
      - ONLYOFFICE_DB_PASSWORD
    read_only: true
    volumes:
      - db_data:/var/lib/postgresql/data:rw
      - db_run:/var/run/postgresql:rw
      - db_socket:/var/run/postgresql:rw
      - ./postgresql/create-pg_hba_conf.sh:/docker-entrypoint-initdb.d/create-pg_hba_conf.sh:ro
      - ./postgresql/create-dbs.sh:/docker-entrypoint-initdb.d/create-dbs.sh:ro
    networks:
      - onlyoffice-db-net
    security_opt:
      - no-new-privileges:true
    tmpfs:
      - /tmp
      - /run

  nextcloud-redis:
    image: redis:alpine
    restart: unless-stopped
    command: >
      redis-server
        --unixsocket /var/run/redis/redis.sock
        --unixsocketperm 770
        --port 0
        --requirepass "$REDIS_HOST_PASSWORD"
    user: "999:1000"
    depends_on:
      - init
    environment:
      # folgende variablen werden via secret gesetzt:
      - REDIS_HOST_PASSWORD
    volumes:
      - redis_socket:/var/run/redis:rw
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    read_only: true
    tmpfs:
      - /tmp
      - /run
      - /data

  nginx-proxy:
    image: nginxinc/nginx-unprivileged:1.25-alpine
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
      - "9000:9000"
    read_only: true
    volumes:
      - nextcloud_socket:/var/run/php:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - nextcloud_certs_archive:/etc/nginx/certs/archive/nextcloud.fairagro.net:ro
      - nextcloud_certs_live:/etc/nginx/certs/live/nextcloud.fairagro.net:ro
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - nextcloud:/var/www/html:ro
      - ./nginx/99_nextcloud_fpm_status_credentials.sh:/docker-entrypoint.d/99_nextcloud_fpm_status_credentials.sh:ro
    environment:
      - NEXTCLOUD_FPM_STATUS_CREDENTIALS
    depends_on:
      - certbot
    networks:
      - external-net
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    cap_add:
      - NET_BIND_SERVICE
    user: "101:1000"  # nginx user in Alpine image
    tmpfs:
      - /var/cache/nginx:uid=101,gid=1000,mode=700
      - /tmp
      - /run:uid=101,gid=1000,mode=700

  init:
    image: alpine
    command: >
      sh -c " \
        chown -R 101:1000 /etc/letsencrypt /var/log/letsencrypt /var/lib/letsencrypt &&
        chown -R 70:1000 /var/run/postgresql && chmod -R g+w /var/run/postgresql && \
        chown -R 999:1000 /var/run/redis && chmod -R g+w /var/run/redis \
      "
    volumes:
      - nextcloud_certs_archive:/etc/letsencrypt/archive/nextcloud.fairagro.net:rw
      - nextcloud_certs_live:/etc/letsencrypt/live/nextcloud.fairagro.net:rw
      - onlyoffice_certs_archive:/etc/letsencrypt/archive/onlyoffice.fairagro.net:rw
      - onlyoffice_certs_live:/etc/letsencrypt/live/onlyoffice.fairagro.net:rw
      - certbot_config:/etc/letsencrypt:rw
      - certbot_logs:/var/log/letsencrypt:rw
      - certbot_work:/var/lib/letsencrypt:rw
      - db_socket:/var/run/postgresql:rw
      - redis_socket:/var/run/redis:rw
    restart: "no"

  certbot:
    image: certbot/dns-cloudflare
    restart: unless-stopped
    user: "101:1000"  # Ein normaler User ohne Rootrechte
    depends_on:
      - init
    read_only: true
    volumes:
      - nextcloud_certs_archive:/etc/letsencrypt/archive/nextcloud.fairagro.net:rw
      - nextcloud_certs_live:/etc/letsencrypt/live/nextcloud.fairagro.net:rw
      - onlyoffice_certs_archive:/etc/letsencrypt/archive/onlyoffice.fairagro.net:rw
      - onlyoffice_certs_live:/etc/letsencrypt/live/onlyoffice.fairagro.net:rw
      - ./certbot/run-certbot.sh:/run-certbot.sh:ro
      - certbot_config:/etc/letsencrypt:rw
      - certbot_logs:/var/log/letsencrypt:rw
      - certbot_work:/var/lib/letsencrypt:rw
    entrypoint: /run-certbot.sh
    environment:
      - NEXTCLOUD_DOMAINS=nextcloud.fairagro.net
      - ONLYOFFICE_DOMAINS=onlyoffice.fairagro.net
      # folgende variablen werden via secret gesetzt:
      - CERTBOT_EMAIL
      - CLOUDFLARE_API_TOKEN
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    tmpfs:
      - /tmp

volumes:
  nextcloud:
  nextcloud_data:
  nextcloud_certs_archive:
  nextcloud_certs_live:
  nextcloud_socket:
  onlyoffice_data:
  onlyoffice_logs:
  onlyoffice_lib:
  onlyoffice_certs_archive:
  onlyoffice_certs_live:
  db_data:
  db_run:
  db_socket:
  nginx_html:
  certbot_config:
  certbot_logs:
  certbot_work:
  redis_socket:

networks:
  onlyoffice-db-net:
    internal: true
    ipam:
      config:
        - subnet: 172.31.254.0/28
  external-net:
    internal: false
